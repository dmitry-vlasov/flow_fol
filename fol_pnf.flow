import ds/tree;
import ds/set;
import fol_formula;

export {
	FolPNF(
		quant : [FolQuantifier],
		cnf : FolCNF
	);
	FolCNF(
		conj : [FolDisj]
	);
	FolDisj(
		disj : [FolLiteral]
	);
	FolLiteral(
		sign : bool,
		atom : FolPred
	);
	
pnf2string(f : FolPNF) -> string {
	quant2string = \quant -> fold(quant, "", \acc, q -> 
		switch(q) {
			FolForall(v): acc + "A" + v.name + ".";
			FolExists(v): acc + "E" + v.name + ".";
		}
	);
	quant2string(f.quant) + cnf2string(f.cnf);
}

cnf2string(f : FolCNF) -> string {
	lit2string = \l -> (if (l.sign) "" else "-. ") + formula2string(l.atom);
	disj2string = \d -> "(" + strGlue(map(d.disj, \l -> lit2string(l)), " V ") + ")";
	conj2string = \c -> "(" + strGlue(map(c.conj, \d -> disj2string(d)), " & ") + ")";
	conj2string(f);
}

}
